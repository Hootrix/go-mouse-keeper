name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  # release-linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: '>=1.21.0'
  #     - name: Install dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y libx11-dev xorg-dev libxtst-dev libayatana-appindicator3-dev
  #     - name: Build
  #       run: |
  #         go build -o dist/mouse-keeper-linux-amd64 ./cmd/mouse-keeper
  #     - name: Upload Linux binary
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: linux-binary
  #         path: dist/mouse-keeper-linux-amd64

  # release-windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: '>=1.21.0'
  #     - name: Build
  #       run: |
  #         go build -o dist/mouse-keeper-windows-amd64.exe ./cmd/mouse-keeper
  #     - name: Upload Windows binary
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows-binary
  #         path: dist/mouse-keeper-windows-amd64.exe

  release-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.0'
      - name: Install dependencies
        run: |
          brew install pkg-config
          brew install cmake
          brew install gcc
          brew install libx11
          brew install xquartz
          brew install automake
          brew install libtool
          brew install cairo
          brew install libxcb
          brew install xorgproto
          brew install opencv
          brew install gtk+3
      - name: Build Intel
        env:
          CGO_ENABLED: 1
          CGO_CFLAGS: "-I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/include/gtk-3.0"
          CGO_LDFLAGS: "-L/usr/local/lib -lcairo -lX11"
          GOFLAGS: "-tags=cairo"
        run: |
          go mod download
          GOOS=darwin GOARCH=amd64 go build -o dist/mouse-keeper-darwin-amd64 ./cmd/mouse-keeper
      - name: Build Apple Silicon
        env:
          CGO_ENABLED: 1
          CGO_CFLAGS: "-I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/include/gtk-3.0"
          CGO_LDFLAGS: "-L/usr/local/lib -lcairo -lX11"
          GOFLAGS: "-tags=cairo"
        run: |
          go mod download
          GOOS=darwin GOARCH=arm64 go build -o dist/mouse-keeper-darwin-arm64 ./cmd/mouse-keeper
      - name: Upload macOS binaries
        uses: actions/upload-artifact@v4
        with:
          name: macos-binaries
          path: dist/mouse-keeper-darwin-*

  create-release:
    needs: [release-linux, release-windows, release-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 准备发布文件
          cd dist
          zip -j mouse-keeper-windows-amd64.zip windows-binary/mouse-keeper-windows-amd64.exe
          tar czf mouse-keeper-linux-amd64.tar.gz linux-binary/mouse-keeper-linux-amd64
          tar czf mouse-keeper-darwin-amd64.tar.gz macos-binaries/mouse-keeper-darwin-amd64
          tar czf mouse-keeper-darwin-arm64.tar.gz macos-binaries/mouse-keeper-darwin-arm64
          
          # 创建 release
          gh release create ${GITHUB_REF_NAME} \
            mouse-keeper-windows-amd64.zip \
            mouse-keeper-linux-amd64.tar.gz \
            mouse-keeper-darwin-amd64.tar.gz \
            mouse-keeper-darwin-arm64.tar.gz \
            --title "${GITHUB_REF_NAME}" \
            --generate-notes
