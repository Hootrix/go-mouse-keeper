name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: amd64
            binary: mouse-keeper-linux-amd64
            deps: |
              sudo apt-get update
              sudo apt-get install -y libx11-dev xorg-dev libxtst-dev libayatana-appindicator3-dev
          - os: windows-latest
            platform: windows
            arch: amd64
            binary: mouse-keeper-windows-amd64.exe
            deps: echo "No deps required for Windows"
          - os: macos-latest
            platform: darwin
            arch: amd64
            binary: mouse-keeper-darwin-amd64
            deps: |
              brew install pkg-config cmake gcc libx11 xquartz automake libtool cairo libxcb xorgproto opencv gtk+3
          - os: macos-latest
            platform: darwin
            arch: arm64
            binary: mouse-keeper-darwin-arm64
            deps: |
              brew install pkg-config cmake gcc libx11 xquartz automake libtool cairo libxcb xorgproto opencv gtk+3

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.0'
          
      - name: Install dependencies
        run: ${{ matrix.deps }}
        
      - name: Build
        env:
          CGO_ENABLED: 1
          CGO_CFLAGS: "-I/usr/local/include -I/usr/local/include/cairo -I/usr/local/include/glib-2.0 -I/usr/local/include/gtk-3.0"
          CGO_LDFLAGS: "-L/usr/local/lib -lcairo -lX11"
          GOFLAGS: "-tags=cairo"
          GOOS: ${{ matrix.platform }}
          GOARCH: ${{ matrix.arch }}
        run: |
          go mod download
          go build -o dist/${{ matrix.binary }} ./cmd/mouse-keeper
          
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/${{ matrix.binary }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 准备发布文件
          cd dist
          zip -j mouse-keeper-windows-amd64.zip windows-amd64/mouse-keeper-windows-amd64.exe
          tar czf mouse-keeper-linux-amd64.tar.gz linux-amd64/mouse-keeper-linux-amd64
          tar czf mouse-keeper-darwin-amd64.tar.gz darwin-amd64/mouse-keeper-darwin-amd64
          tar czf mouse-keeper-darwin-arm64.tar.gz darwin-arm64/mouse-keeper-darwin-arm64
          
          # 创建 release
          gh release create ${GITHUB_REF_NAME} \
            mouse-keeper-windows-amd64.zip \
            mouse-keeper-linux-amd64.tar.gz \
            mouse-keeper-darwin-amd64.tar.gz \
            mouse-keeper-darwin-arm64.tar.gz \
            --title "${GITHUB_REF_NAME}" \
            --generate-notes
